name: Multi-platform Build for Server and Client

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows]
        arch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.3 # 根据需求修改

      - name: Compile Server
        run: |
          mkdir -p build/${{ matrix.os }}-${{ matrix.arch }}
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o build/${{ matrix.os }}-${{ matrix.arch }}/server cmd/server/main.go

      - name: Compile Client
        run: |
          mkdir -p build/${{ matrix.os }}-${{ matrix.arch }}
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o build/${{ matrix.os }}-${{ matrix.arch }}/client cmd/client/main.go

      - name: Compress Artifacts
        run: |
          tar -czf build/${{ matrix.os }}-${{ matrix.arch }}.tar.gz -C build/${{ matrix.os }}-${{ matrix.arch }} .

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries-${{ matrix.os }}-${{ matrix.arch }}
          path: build/${{ matrix.os }}-${{ matrix.arch }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: v0.0.1 # 替换为动态版本号或手动修改
          release_name: Release v1.0.0
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/linux-amd64.tar.gz
          asset_name: server-linux-amd64.tar.gz
          asset_content_type: application/gzip
      - name: Upload Release Assets (Linux ARM64)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/linux-arm64.tar.gz
          asset_name: server-linux-arm64.tar.gz
          asset_content_type: application/gzip
      - name: Upload Release Assets (Windows AMD64)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/windows-amd64.tar.gz
          asset_name: server-windows-amd64.tar.gz
          asset_content_type: application/gzip
